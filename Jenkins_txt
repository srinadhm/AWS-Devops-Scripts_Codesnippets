Jenkins pipeline
Jenkins Pipeline (or simply "Pipeline") is a suite of plugins which supports implementing and integrating continuous delivery pipelines into Jenkins. ... The definition of a Jenkins Pipeline is typically written into a text file (called a Jenkinsfile ) which in turn is checked into a project's source control repository.

E:\Jenkins\jenkins.xml --- httpport ( by default it is 8080 we can change to according to ours )

https://www.jenkins.io/blog/2017/02/07/declarative-maven-project/

C:\WINDOWS\system32\config\systemprofile\AppData\Local\Jenkins\.jenkins\workspace\Jenkins-Freestyle-job

Installation path : E:\Jenkins

Jenkins work space when creating job : C:\Windows\System32\config\systemprofile\AppData\Local\Jenkins\.jenkins\workspace

workspace for jenkins : C:\Users\QC\.jenkins


What are different types of Jenkins pipeline?
A Jenkinsfile can be written using two types of syntax - Declarative and Scripted. Declarative and Scripted Pipelines are constructed fundamentally differently. Declarative Pipeline is a more recent feature of Jenkins Pipeline which: provides richer syntactical features over Scripted Pipeline syntax, and.

What is CI and CD in Jenkins?

Is Jenkins pipeline groovy?

How do I make a CI CD pipeline in Jenkins?

What is Jenkins pipeline example?

What are three blocks in Jenkins pipeline?

How do you write Jenkins pipeline?

How do I learn Jenkins pipeline script?

What is difference between job and pipeline in Jenkins?

Is Jenkins CI or CD tool?

Is Jenkins a CI or CD?



What is CI CD pipeline example?


[root@ip-172-31-89-139 ~]# cd /var/lib/jenkins
[root@ip-172-31-89-139 jenkins]# ll
total 88
-rw-r--r--  1 jenkins jenkins 1595 Jun 10 04:56 config.xml
-rw-r--r--  1 jenkins jenkins  156 Jun 10 04:46 hudson.model.UpdateCenter.xml
-rw-r--r--  1 jenkins jenkins  370 Jun 10 04:56 hudson.plugins.git.GitTool.xml
-rw-r--r--  1 jenkins jenkins  173 Jun 10 04:56 hudson.plugins.gradle.Gradle.xml
-rw-r--r--  1 jenkins jenkins  146 Jun 10 04:56 hudson.tasks.Ant.xml
-rw-r--r--  1 jenkins jenkins  333 Jun 10 04:56 hudson.tasks.Maven.xml
-rw-------  1 jenkins jenkins 1712 Jun 10 04:46 identity.key.enc
-rw-r--r--  1 jenkins jenkins    5 Jun 10 04:52 jenkins.install.InstallUtil.lastExecVersion
-rw-r--r--  1 jenkins jenkins    5 Jun 10 04:52 jenkins.install.UpgradeWizard.state
-rw-r--r--  1 jenkins jenkins  183 Jun 10 04:52 jenkins.model.JenkinsLocationConfiguration.xml
-rw-r--r--  1 jenkins jenkins  247 Jun 10 04:56 jenkins.mvn.GlobalMavenConfig.xml
-rw-r--r--  1 jenkins jenkins  171 Jun 10 04:46 jenkins.telemetry.Correlator.xml
drwxr-xr-x  3 jenkins jenkins   34 Jun 10 04:58 jobs
drwxr-xr-x  3 jenkins jenkins   19 Jun 10 04:46 logs
-rw-r--r--  1 jenkins jenkins  907 Jun 10 04:46 nodeMonitors.xml
drwxr-xr-x  2 jenkins jenkins    6 Jun 10 04:46 nodes
-rw-r--r--  1 jenkins jenkins  255 Jun 10 04:56 org.jenkinsci.plugins.gitclient.JGitApacheTool.xml
-rw-r--r--  1 jenkins jenkins  243 Jun 10 04:56 org.jenkinsci.plugins.gitclient.JGitTool.xml
-rw-r--r--  1 jenkins jenkins   46 Jun 10 05:13 org.jenkinsci.plugins.workflow.flow.FlowExecutionList.xml
drwxr-xr-x 83 jenkins jenkins 8192 Jun 10 04:50 plugins
-rw-r--r--  1 jenkins jenkins  129 Jun 10 05:14 queue.xml
-rw-r--r--  1 jenkins jenkins   64 Jun 10 04:46 secret.key
-rw-r--r--  1 jenkins jenkins    0 Jun 10 04:46 secret.key.not-so-secret
drwx------  4 jenkins jenkins 4096 Jun 10 05:17 secrets
drwxr-xr-x  2 jenkins jenkins  182 Jun 10 04:50 updates
drwxr-xr-x  2 jenkins jenkins   24 Jun 10 04:46 userContent
drwxr-xr-x  3 jenkins jenkins   54 Jun 10 04:51 users
drwxr-xr-x  2 jenkins jenkins    6 Jun 10 04:50 workflow-libs
drwxr-xr-x  3 jenkins jenkins   34 Jun 10 05:13 workspace

Declarative pipeline Script
1.Stage check the code from git 
2.Build the code using Maven build tool
pipeline{
    tools { 
        maven 'Maven-3.8.1' 
    }
    agent {
        label 'master'
    }
    stages{
        stage ('git stage'){
            steps{
            git branch: 'main', url: 'https://github.com/cloudtechmasters/springboot-docker-assignment-without-database.git'
            }
        }
        stage ('build stage'){
            steps{
                sh 'mvn clean package'
            }
        }
        
    }
}
